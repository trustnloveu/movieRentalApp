{"version":3,"sources":["components/navBar.jsx","services/logService.js","services/httpService.js","services/genreService.js","services/movieService.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/pagination.jsx","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/notFound.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","user","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","name","init","Sentry","dsn","release","process","npm_package_version","integrations","Integrations","BrowserTracing","tracesSampleRate","log","error","axios","defaults","baseURL","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","getGenres","http","movieUrl","getMovie","movieId","saveMovie","movie","_id","body","deleteMovie","ListGroup","props","items","textProperty","valueProperty","onItemSelect","selectedItem","map","item","onClick","key","style","cursor","defaultProps","Like","classes","liked","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","_","createKey","data","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","console","MoviesTable","title","onLike","deleteColumn","onDelete","auth","isAdmin","push","movies","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleGenreSelect","genre","setState","handleSearch","query","handleSort","handleLike","index","indexOf","handleDelete","originalMovies","filter","m","handlePageChange","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","populateGenres","populateMovie","match","params","mapToViewModel","replace","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","LoginForm","username","location","window","from","pathname","invalidInfo","Logout","register","RegisterForm","userService","NotFound","ProtectedRoute","component","render","App","Fragment","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"yOAuEeA,EApEA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACE,yBAAKC,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,WAAlC,QAGA,4BACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BQ,GAAG,aAC3C,wBAAIR,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,WAAjC,WAIF,wBAAID,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,cAAjC,cAIF,wBAAID,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,YAAjC,aAIAF,GACA,oCACE,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,UAAjC,UAIF,wBAAID,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,aAAjC,cAMLF,GACC,oCACE,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,YAC9BF,EAAKU,KADR,YAIF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,WAAjC,gB,kFCzCD,OACbS,KAhBF,WACEC,IAAY,CACVC,IACE,4EACFC,QAAS,iBAAmBC,wLAAYC,oBACxCC,aAAc,CAAC,IAAIC,IAAaC,gBAEhCC,iBAAkB,KAUpBC,IANF,SAAaC,GACXV,IAAwBU,KCX1BC,IAAMC,SAASC,QAAUV,mDAEzBQ,IAAMG,aAAaC,SAASC,IAAI,MAAM,SAACN,GAWrC,OATEA,EAAMK,UACNL,EAAMK,SAASE,QAAU,KACzBP,EAAMK,SAASE,OAAS,MAGxBC,EAAOT,IAAIC,GACXS,YAAM,gCAGDC,QAAQC,OAAOX,MAOT,OACbY,IAAKX,IAAMW,IACXC,KAAMZ,IAAMY,KACZC,IAAKb,IAAMa,IACXC,OAAQd,IAAMc,OACdC,OATF,SAAgBC,GACdhB,IAAMC,SAASgB,QAAQC,OAAO,gBAAkBF,ICb3C,SAASG,IACd,OAAOC,EAAKT,IAHM,WCGpB,SAASU,EAASnC,GAChB,MAAM,GAAN,OAJkB,UAIlB,YAAyBA,GASpB,SAASoC,EAASC,GACvB,OAAOH,EAAKT,IAAIU,EAASE,IAIpB,SAASC,EAAUC,GACxB,GAAIA,EAAMC,IAAK,CACb,IAAMC,EAAI,eAAQF,GAElB,cADOE,EAAKD,IACLN,EAAKP,IAAIQ,EAASI,EAAMC,KAAMC,GAGvC,OAAOP,EAAKR,KAzBM,UAyBYa,GAIzB,SAASG,EAAYL,GAC1B,OAAOH,EAAKN,OAAOO,EAASE,IClC9B,IAAMM,EAAY,SAACC,GAAW,IAE1BC,EAKED,EALFC,MACAC,EAIEF,EAJFE,aACAC,EAGEH,EAHFG,cACAC,EAEEJ,EAFFI,aACAC,EACEL,EADFK,aAGF,OACE,wBAAIzD,UAAU,cACXqD,EAAMK,KAAI,SAACC,GAAD,OACT,wBACEC,QAAS,kBAAMJ,EAAaG,IAC5BE,IAAKF,EAAKJ,GACVvD,UACE2D,IAASF,EAAe,yBAA2B,kBAErDK,MAAO,CAAEC,OAAQ,YAEhBJ,EAAKL,SAOhBH,EAAUa,aAAe,CACvBV,aAAc,OACdC,cAAe,OAGFJ,QCjBAc,EAbF,SAACb,GACZ,IAAIc,EAAU,cAGd,OAFKd,EAAMe,QAAOD,GAAW,MAG3B,uBACEN,QAASR,EAAMQ,QACfE,MAAO,CAAEC,OAAQ,WACjB/D,UAAWkE,KCkCFE,E,4MAtCbC,UAAY,SAACC,GACX,IAAMC,EAAU,eAAQ,EAAKnB,MAAMmB,YAC/BA,EAAWD,OAASA,EACtBC,EAAWC,MAA6B,QAArBD,EAAWC,MAAkB,OAAS,OAEzDD,EAAWD,KAAOA,EAClBC,EAAWC,MAAQ,OAErB,EAAKpB,MAAMqB,OAAOF,I,EAGpBG,eAAiB,SAACC,GAAY,IACpBJ,EAAe,EAAKnB,MAApBmB,WACR,OAAII,EAAOL,OAASC,EAAWD,KAAa,KACnB,QAArBC,EAAWC,MAAwB,uBAAGxE,UAAU,mBAC7C,uBAAGA,UAAU,qB,uDAIZ,IAAD,OACP,OACE,+BACE,4BACG4E,KAAKxB,MAAMyB,QAAQnB,KAAI,SAACiB,GAAD,OACtB,wBACE3E,UAAU,YACV6D,IAAKc,EAAOL,MAAQK,EAAOd,IAC3BD,QAAS,kBAAM,EAAKS,UAAUM,EAAOL,QAEpCK,EAAOG,MALV,IAKkB,EAAKJ,eAAeC,a,GA/BxBI,a,iBC6BXC,E,4MA9BbC,WAAa,SAACtB,EAAMgB,GAClB,OAAIA,EAAOO,QAAgBP,EAAOO,QAAQvB,GAEnCwB,IAAElD,IAAI0B,EAAMgB,EAAOL,O,EAI5Bc,UAAY,SAACzB,EAAMgB,GACjB,OAAOhB,EAAKX,KAAO2B,EAAOL,MAAQK,EAAOd,M,uDAGjC,IAAD,SACmBe,KAAKxB,MAAvBiC,EADD,EACCA,KAAMR,EADP,EACOA,QAEd,OACE,+BACGQ,EAAK3B,KAAI,SAACC,GAAD,OACR,wBAAIE,IAAKF,EAAKX,KACX6B,EAAQnB,KAAI,SAACiB,GAAD,OACX,wBAAId,IAAK,EAAKuB,UAAUzB,EAAMgB,IAC3B,EAAKM,WAAWtB,EAAMgB,gB,GAtBfI,aCUTO,EATD,SAAC,GAA2C,IAAzCT,EAAwC,EAAxCA,QAASN,EAA+B,EAA/BA,WAAYE,EAAmB,EAAnBA,OAAQY,EAAW,EAAXA,KAC5C,OACE,2BAAOrF,UAAU,SACf,kBAAC,EAAD,CAAa6E,QAASA,EAASN,WAAYA,EAAYE,OAAQA,IAC/D,kBAAC,EAAD,CAAWY,KAAMA,EAAMR,QAASA,M,oDCG/B,WAAqBU,EAAOC,GAA5B,iBAAAC,EAAA,sEACuB/C,EAAKR,KAPf,QAOiC,CAAEqD,QAAOC,aADvD,gBACSlD,EADT,EACG+C,KACRK,aAAaC,QAPE,QAOgBrD,GAF1B,4C,sBAwBA,SAASsD,IACd,OAAOF,aAAaG,QA9BL,SAGjBnD,EAAKL,OAAOuD,KA8BG,OACbE,MA7BK,SAAP,qCA8BEC,aAzBK,SAAsBzD,GAC3BoD,aAAaC,QAXE,QAWgBrD,IAyB/B0D,OAtBK,WACLN,aAAaO,WAfE,UAqCfC,eAnBK,WACL,IACE,IAAM5D,EAAMoD,aAAaG,QApBZ,SAqBb,OAAOM,YAAU7D,GAEjB,MAAO8D,GAEP,OADAC,QAAQjF,IAAI,+CACL,OAaTwE,UCeaU,E,kDArBb,aAAe,IAAD,uBACZ,gBAhCFzB,QAAU,CACR,CACEP,KAAM,QACNQ,MAAO,QACPI,QAAS,SAACnC,GAAD,OACP,kBAAC,IAAD,CAAM9C,GAAE,kBAAa8C,EAAMC,MAAQD,EAAMwD,SAG7C,CAAEjC,KAAM,aAAcQ,MAAO,SAC7B,CAAER,KAAM,gBAAiBQ,MAAO,SAChC,CAAER,KAAM,kBAAmBQ,MAAO,QAClC,CACEjB,IAAK,OACLqB,QAAS,SAACnC,GAAD,OACP,kBAAC,EAAD,CAAMoB,MAAOpB,EAAMoB,MAAOP,QAAS,kBAAM,EAAKR,MAAMoD,OAAOzD,SAiBnD,EAZd0D,aAAe,CACb5C,IAAK,SACLqB,QAAS,SAACnC,GAAD,OACP,4BACEa,QAAS,kBAAM,EAAKR,MAAMsD,SAAS3D,IACnC/C,UAAU,yBAFZ,YAWF,IAAMD,EAAO4G,EAAKT,iBAFN,OAGRnG,GAAQA,EAAK6G,SAAS,EAAK/B,QAAQgC,KAAK,EAAKJ,cAHrC,E,qDAOJ,IAAD,EACgC7B,KAAKxB,MAApC0D,EADD,EACCA,OAAQvC,EADT,EACSA,WAAYE,EADrB,EACqBA,OAE5B,OACE,kBAAC,EAAD,CACEY,KAAMyB,EACNjC,QAASD,KAAKC,QACdN,WAAYA,EACZE,OAAQA,Q,GA/CUM,aCyCXgC,EAxCI,SAAC3D,GAAW,IACrB4D,EAAoD5D,EAApD4D,WAAYC,EAAwC7D,EAAxC6D,SAAUC,EAA8B9D,EAA9B8D,YAAaC,EAAiB/D,EAAjB+D,aAErCC,EAAaC,KAAKC,KAAKN,EAAaC,GAK1C,GAAmB,IAAfG,EAAkB,OAAO,KAC7B,IAAMG,EAAQpC,IAAEqC,MAAM,EAAGJ,EAAa,GAEtC,OACE,6BACE,wBAAIpH,UAAU,cACXuH,EAAM7D,KAAI,SAAC+D,GAAD,OACT,wBACE5D,IAAK4D,EACLzH,UAAWyH,IAASP,EAAc,mBAAqB,aAEvD,4BACEtD,QAAS,kBAAMuD,EAAaM,IAC5BzH,UAAU,YACV8D,MAAO,CAAEC,OAAQ,YAEhB0D,UC7BR,SAASC,EAASrE,EAAOsE,EAAYV,GAC1C,IAAMW,GAAcD,EAAa,GAAKV,EACtC,OAAO9B,IAAE9B,GAAOwE,MAAMD,GAAYE,KAAKb,GAAUc,QCFnD,IAaeC,EAbG,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAC1B,OACE,2BACE/H,KAAK,OACLO,KAAK,QACLT,UAAU,oBACVkI,YAAY,YACZH,MAAOA,EACPE,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,cAAcL,WCwJ/BM,E,4MAjJbC,MAAQ,CACNxB,OAAQ,GACRyB,OAAQ,GACRtB,SAAU,EACVC,YAAa,EACb3C,WAAY,CAAED,KAAM,QAASE,MAAO,OACpCgE,YAAa,GACbC,cAAe,M,EAajBC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,cAAeE,EAAOH,YAAa,GAAItB,YAAa,K,EAGtE2B,aAAe,SAACC,GACd,EAAKF,SAAS,CAAEJ,YAAaM,EAAOL,cAAe,KAAMvB,YAAa,K,EAGxE6B,WAAa,SAACxE,GACZ,EAAKqE,SAAS,CAAErE,WAAYA,K,EAG9ByE,WAAa,SAACjG,GACZ,IAAM+D,EAAM,YAAO,EAAKwB,MAAMxB,QACxBmC,EAAQnC,EAAOoC,QAAQnG,GAC7B+D,EAAOmC,GAAP,eAAqBnC,EAAOmC,IAC5BnC,EAAOmC,GAAO9E,OAAS2C,EAAOmC,GAAO9E,MACrC,EAAKyE,SAAS,CAAE9B,Y,EAGlBqC,a,uCAAe,WAAOpG,GAAP,iBAAA0C,EAAA,6DACP2D,EAAiB,EAAKd,MAAMxB,OAC5BA,EAASsC,EAAeC,QAAO,SAACC,GAAD,OAAOA,EAAEtG,MAAQD,EAAMC,OAC5D,EAAK4F,SAAS,CAAE9B,WAHH,kBAML5D,EAAYH,EAAMC,KANb,uDAQP,KAAGtB,UAAmC,MAAvB,KAAGA,SAASE,QAE7BE,YAAM,wCAER,EAAK8G,SAAS,CAAE9B,OAAQsC,IAZb,yD,wDAgBfG,iBAAmB,SAAC9B,GAClB,EAAKmB,SAAS,CAAE1B,YAAaO,K,EAG/B+B,aAAe,WAAO,IAAD,EAQf,EAAKlB,MANPrB,EAFiB,EAEjBA,SACAC,EAHiB,EAGjBA,YACAuB,EAJiB,EAIjBA,cACAlE,EALiB,EAKjBA,WACQkF,EANS,EAMjB3C,OACA0B,EAPiB,EAOjBA,YAUEkB,EAAWD,EACXjB,EACFkB,EAAWD,EAAUJ,QAAO,SAACC,GAAD,OAC1BA,EAAE/C,MAAMoD,cAAcC,WAAWpB,EAAYmB,kBAExClB,GAAiBA,EAAczF,MACtC0G,EAAWD,EAAUJ,QAAO,SAACC,GAAD,OAAOA,EAAEX,MAAM3F,MAAQyF,EAAczF,QAGnE,IAEM8D,EAASY,EAFAvC,IAAE0E,QAAQH,EAAU,CAACnF,EAAWD,MAAO,CAACC,EAAWC,QAElC0C,EAAaD,GAE7C,MAAO,CAAE6C,WAAYJ,EAASK,OAAQ1E,KAAMyB,I,0MA7ErBrE,I,uBAAf4C,E,EAAAA,KACFkD,E,CAAU,CAAEvF,IAAK,GAAIvC,KAAM,e,mBAAmB4E,I,SXhB/C3C,EAAKT,IATM,W,gBW2BF6E,E,EAANzB,KACRT,KAAKgE,SAAS,CAAE9B,OAAQA,EAAQyB,OAAQA,I,sIA6EjC,MAEoD3D,KAAK0D,MAAxDrB,EAFD,EAECA,SAAUC,EAFX,EAEWA,YAAa3C,EAFxB,EAEwBA,WAAYiE,EAFpC,EAEoCA,YACnCzI,EAAS6E,KAAKxB,MAAdrD,KAHD,EAQ8B6E,KAAK4E,eAAlCM,EARD,EAQCA,WAAkBhD,EARnB,EAQazB,KAGpB,OACE,yBAAKrF,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CACEqD,MAAOuB,KAAK0D,MAAMC,OAClB/E,aAAcoB,KAAK8D,kBACnBjF,aAAcmB,KAAK0D,MAAMG,iBAG7B,yBAAKzI,UAAU,OACZD,GACC,kBAAC,IAAD,CACEE,GAAG,cACHD,UAAU,kBACV8D,MAAO,CAAEkG,aAAc,KAHzB,aAQF,sCAAYF,EAAZ,4BACA,kBAAC,EAAD,CAAW/B,MAAOS,EAAaP,SAAUrD,KAAKiE,eAC9C,kBAAC,EAAD,CACE/B,OAAQA,EACRvC,WAAYA,EACZiC,OAAQ5B,KAAKoE,WACbtC,SAAU9B,KAAKuE,aACf1E,OAAQG,KAAKmE,aAEf,kBAAC,EAAD,CACE/B,WAAY8C,EACZ7C,SAAUA,EACVC,YAAaA,EACbC,aAAcvC,KAAK2E,yB,GA1IVxE,a,yCCMNkF,GAnBD,SAAC,GAAqC,IAAnCxJ,EAAkC,EAAlCA,KAAMqE,EAA4B,EAA5BA,MAAOzD,EAAqB,EAArBA,MAAU6I,EAAW,wCACjD,OACE,yBAAKlK,UAAU,cACb,2BAAOmK,QAAS1J,GAAOqE,GACvB,2CAIMoF,EAJN,CAKE1J,GAAIC,EACJA,KAAMA,EACNT,UAAU,kBAGXqB,GAAS,yBAAKrB,UAAU,sBAAsBqB,KCEtC+I,GAjBA,SAAC,GAA8C,IAA3C3J,EAA0C,EAA1CA,KAAMqE,EAAoC,EAApCA,MAAOuF,EAA6B,EAA7BA,QAAShJ,EAAoB,EAApBA,MAAU6I,EAAU,kDACzD,OACI,yBAAKlK,UAAU,cACX,2BAAOmK,QAAS1J,GAAOqE,GACvB,0CAAQrE,KAAMA,EAAMD,GAAIC,GAAUyJ,EAAlC,CAAwClK,UAAU,iBAC9C,4BAAQ+H,MAAM,KACbsC,EAAQ3G,KAAI,SAAA4G,GAAM,OACf,4BAAQzG,IAAKyG,EAAOtH,IAAK+E,MAAOuC,EAAOtH,KAClCsH,EAAO7J,UAInBY,GAAS,yBAAKrB,UAAU,sBAAsBqB,KCmF5CkJ,G,4MA1FbjC,MAAQ,CACNjD,KAAM,GACNmF,OAAQ,I,EAIVC,SAAW,WACT,IACQpJ,EAAUqJ,IAAID,SAAS,EAAKnC,MAAMjD,KAAM,EAAKsF,OADrC,CAAEC,YAAY,IACtBvJ,MACR,IAAKA,EAAO,OAAO,KAEnB,IALe,EAKTmJ,EAAS,GALA,cAMEnJ,EAAMwJ,SANR,IAMf,gCAASlH,EAAT,QAAgC6G,EAAO7G,EAAKW,KAAK,IAAMX,EAAKmH,SAN7C,8BAOf,OAAON,G,EAITO,iBAAmB,YAAsB,IAAnBtK,EAAkB,EAAlBA,KAAMsH,EAAY,EAAZA,MAEpBiD,EAAG,eAAMvK,EAAOsH,GAChB4C,EAAM,eAAMlK,EAAO,EAAKkK,OAAOlK,IAC7BY,EAAUqJ,IAAID,SAASO,EAAKL,GAA5BtJ,MACR,OAAOA,EAAQA,EAAMwJ,QAAQ,GAAGC,QAAU,M,EAI5CG,aAAe,SAAC9C,GAEdA,EAAE+C,iBAEF,IAAMV,EAAS,EAAKC,WACpB,EAAK7B,SAAS,CAAE4B,OAAQA,GAAU,KAC9BA,GAEJ,EAAKW,Y,EAIPC,aAAe,YAA+B,IAAbC,EAAY,EAA3BjD,cACVoC,EAAM,eAAQ,EAAKlC,MAAMkC,QACzBc,EAAe,EAAKP,iBAAiBM,GAEvCC,EAAcd,EAAOa,EAAM5K,MAAQ6K,SAC3Bd,EAAOa,EAAM5K,MAEzB,IAAM4E,EAAI,eAAQ,EAAKiD,MAAMjD,MAC7BA,EAAKgG,EAAM5K,MAAQ4K,EAAMtD,MAEzB,EAAKa,SAAS,CAAEvD,OAAMmF,Y,2DAGX1F,GACX,OACE,4BAAQyG,SAAU3G,KAAK6F,WAAYzK,UAAU,mBAC1C8E,K,kCAKKrE,EAAMqE,GAAuB,IAAhB5E,EAAe,uDAAR,OAAQ,EACb0E,KAAK0D,MAAtBjD,EAD8B,EAC9BA,KAAMmF,EADwB,EACxBA,OAEd,OACE,kBAAC,GAAD,CACEtK,KAAMA,EACNO,KAAMA,EACNsH,MAAO1C,EAAK5E,GACZqE,MAAOA,EACPmD,SAAUrD,KAAKwG,aACf/J,MAAOmJ,EAAO/J,O,mCAKPA,EAAMqE,EAAOuF,GAAU,IAAD,EACRzF,KAAK0D,MAAtBjD,EADyB,EACzBA,KAAMmF,EADmB,EACnBA,OAEd,OACE,kBAAC,GAAD,CACE/J,KAAMA,EACNsH,MAAO1C,EAAK5E,GACZqE,MAAOA,EACPuF,QAASA,EACTpC,SAAUrD,KAAKwG,aACf/J,MAAOmJ,EAAO/J,S,GArFHsE,aCsFJyG,G,4MApFblD,MAAQ,CACNjD,KAAM,CACJkB,MAAO,GACPkF,QAAS,GACTC,cAAe,GACfC,gBAAiB,IAEnBpD,OAAQ,GACRiC,OAAQ,I,EAGVG,OAAS,CACP3H,IAAK0H,IAAIkB,SACTrF,MAAOmE,IAAIkB,SAASC,WAAW/G,MAAM,SACrC2G,QAASf,IAAIkB,SAASC,WAAW/G,MAAM,SACvC4G,cAAehB,IAAIoB,SAChBD,WACAE,IAAI,GACJC,IAAI,KACJlH,MAAM,mBACT6G,gBAAiBjB,IAAIoB,SAClBD,WACAE,IAAI,GACJC,IAAI,IACJlH,MAAM,sB,EAsCXqG,S,sBAAW,sBAAA1F,EAAA,sEACH3C,EAAU,EAAKwF,MAAMjD,MADlB,OAGT,EAAKjC,MAAM6I,QAAQpF,KAAK,WAHf,2C,4LAlCHjC,KAAKsH,iB,uBACLtH,KAAKuH,gB,+QAIoB1J,I,gBAAjB8F,E,EAANlD,KACRT,KAAKgE,SAAS,CAAEL,W,4QAME,SADV1F,EAAU+B,KAAKxB,MAAMgJ,MAAMC,OAAO7L,I,iEAGVoC,EAASC,G,gBAAzBE,E,EAANsC,KACRT,KAAKgE,SAAS,CAAEvD,KAAMT,KAAK0H,eAAevJ,K,kDAEtC,KAAGrB,UAAmC,MAAvB,KAAGA,SAASE,QAE7BgD,KAAKxB,MAAM6I,QAAQM,QAAQ,c,qJAKlBxJ,GACb,MAAO,CACLC,IAAKD,EAAMC,IACXuD,MAAOxD,EAAMwD,MACbkF,QAAS1I,EAAM4F,MAAM3F,IACrB0I,cAAe3I,EAAM2I,cACrBC,gBAAiB5I,EAAM4I,mB,+BAWzB,OACE,6BACE,yCACA,0BAAMa,SAAU5H,KAAKqG,cAClBrG,KAAK6H,YAAY,QAAS,SAC1B7H,KAAK8H,aAAa,UAAW,QAAS9H,KAAK0D,MAAMC,QACjD3D,KAAK6H,YAAY,gBAAiB,kBAAmB,UACrD7H,KAAK6H,YAAY,kBAAmB,QACpC7H,KAAK+H,aAAa,c,GA9ELpC,ICDTqC,GAJG,WAChB,OAAO,0CCGMC,GAJC,WACd,OAAO,wCC2DMC,G,4MAtDbxE,MAAQ,CACNjD,KAAM,CAAE0H,SAAU,GAAIvH,SAAU,IAChCgF,OAAQ,I,EAIVG,OAAS,CACPoC,SAAUrC,IAAIkB,SAASC,WAAW/G,MAAM,YACxCU,SAAUkF,IAAIkB,SAASC,WAAW/G,MAAM,a,EAW1CqG,S,sBAAW,gCAAA1F,EAAA,sEAGCJ,EAAS,EAAKiD,MAAdjD,KAHD,SAIDsB,EAAKb,MAAMT,EAAK0H,SAAU1H,EAAKG,UAJ9B,OAMC8C,EAAU,EAAKlF,MAAM4J,SAArB1E,MAER2E,OAAOD,SAAW1E,EAAQA,EAAM4E,KAAKC,SAAW,IARzC,gDAUH,KAAGzL,UAAmC,MAAvB,KAAGA,SAASE,UACvB4I,EADuC,eACzB,EAAKlC,MAAMkC,SACxB4C,YAAc,KAAG1L,SAAS2D,KACjC,EAAKuD,SAAS,CAAE4B,WAChB1I,IAAMT,MAAN,UAAe,EAAKiH,MAAMkC,OAAO4C,eAd5B,yD,uDAoBT,OAAIzG,EAAKT,iBAAyB,kBAAC,IAAD,CAAUjG,GAAG,MAG7C,6BACE,qCACA,0BAAMuM,SAAU5H,KAAKqG,cAClBrG,KAAK6H,YAAY,WAAY,YAC7B7H,KAAK6H,YAAY,WAAY,WAAY,YACzC7H,KAAK+H,aAAa,e,GAhDLpC,ICOT8C,G,kLATX1G,EAAKX,SACLiH,OAAOD,SAAW,M,+BAIlB,OAAO,S,GAPUjI,aCWd,SAASuI,GAASvN,GAKvB,OAAO2C,EAAKR,KAfM,SAeY,CAC5BqD,MAAOxF,EAAKgN,SACZvH,SAAUzF,EAAKyF,SACf/E,KAAMV,EAAKU,O,IC6BA8M,G,4MAzCbjF,MAAQ,CACNjD,KAAM,CAAE0H,SAAU,GAAIvH,SAAU,GAAI/E,KAAM,IAC1C+J,OAAQ,I,EAGVG,OAAS,CACPoC,SAAUrC,IAAIkB,SAASrG,QAAQsG,WAAW/G,MAAM,YAChDU,SAAUkF,IAAIkB,SAASG,IAAI,GAAGF,WAAW/G,MAAM,YAC/CrE,KAAMiK,IAAIkB,SAASC,WAAW/G,MAAM,S,EAGtCqG,S,sBAAW,8BAAA1F,EAAA,+EAEgB+H,GAAqB,EAAKlF,MAAMjD,MAFhD,OAED3D,EAFC,OAGPiF,EAAKZ,aAAarE,EAASa,QAAQ,iBACnC0K,OAAOD,SAAW,IAJX,gDAMH,KAAGtL,UAAmC,MAAvB,KAAGA,SAASE,UACvB4I,EADuC,eACzB,EAAKlC,MAAMkC,SACxB4C,YAAc,KAAG1L,SAAS2D,KACjC,EAAKuD,SAAS,CAAE4B,WAChB1I,YAAM,GAAD,OAAI,EAAKwG,MAAMkC,OAAO4C,eAVtB,yD,uDAgBT,OACE,6BACE,wCACA,0BAAMZ,SAAU5H,KAAKqG,cAClBrG,KAAK6H,YAAY,WAAY,YAC7B7H,KAAK6H,YAAY,WAAY,WAAY,YACzC7H,KAAK6H,YAAY,OAAQ,QACzB7H,KAAK+H,aAAa,kB,GAnCFpC,ICHZkD,GAJE,WACf,OAAO,yCCsBMC,GArBQ,SAAC,GAAoD,EAAlDpJ,KAAmD,IAAlCS,EAAiC,EAA5C4I,UAAsBC,EAAsB,EAAtBA,OAAW1D,EAAW,6CAC1E,OACE,kBAAC,IAAD,iBAEMA,EAFN,CAGE0D,OAAQ,SAACxK,GACP,OAAKuD,EAAKT,iBASHnB,EAAY,kBAACA,EAAc3B,GAAYwK,EAAOxK,GAPjD,kBAAC,IAAD,CACEnD,GAAI,CACFkN,SAAU,SACV7E,MAAO,CAAE4E,KAAM9J,EAAM4J,kBC4CtBa,I,mNAlCbvF,MAAQ,G,kEAGN,IAAMvI,EAAO4G,EAAKT,iBAClBtB,KAAKgE,SAAS,CAAE7I,W,+BAGR,IAAD,OACP,OACE,kBAAC,IAAM+N,SAAP,KACE,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAQ/N,KAAM6E,KAAK0D,MAAMvI,OACzB,0BAAMC,UAAU,aACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsE,KAAK,YAAYqJ,UAAWJ,KACnC,kBAAC,IAAD,CAAOjJ,KAAK,UAAUqJ,UAAWN,KACjC,kBAAC,IAAD,CAAO/I,KAAK,SAASqJ,UAAWb,KAChC,kBAAC,GAAD,CAAgBxI,KAAK,cAAcqJ,UAAWnC,KAC9C,kBAAC,IAAD,CACElH,KAAK,UACLsJ,OAAQ,SAACxK,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBrD,KAAM,EAAKuI,MAAMvI,WAEzD,kBAAC,IAAD,CAAOuE,KAAK,aAAaqJ,UAAWf,KACpC,kBAAC,IAAD,CAAOtI,KAAK,WAAWqJ,UAAWd,KAClC,kBAAC,IAAD,CAAOvI,KAAK,aAAaqJ,UAAWF,KACpC,kBAAC,IAAD,CAAUP,KAAK,IAAIa,OAAK,EAAC9N,GAAG,YAC5B,kBAAC,IAAD,CAAUA,GAAG,qB,GA3BP8E,c,OCZEiJ,QACW,cAA7Bf,OAAOD,SAASiB,UAEe,UAA7BhB,OAAOD,SAASiB,UAEhBhB,OAAOD,SAASiB,SAAS7B,MACvB,2D,cCNNvK,EAAOnB,OAIPwN,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvN,GACLgF,QAAQhF,MAAMA,EAAMyJ,a","file":"static/js/main.d9b346fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/movies\">\r\n        Logo\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n          {user && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.name}'s Info\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nfunction init() {\r\n  Sentry.init({\r\n    dsn:\r\n      \"https://ea74f3a515b6487890f23666d8d47157@o481610.ingest.sentry.io/5531748\",\r\n    release: \"movieRentalApp\" + process.env.npm_package_version,\r\n    integrations: [new Integrations.BrowserTracing()],\r\n\r\n    tracesSampleRate: 1.0,\r\n  });\r\n}\r\n\r\nfunction log(error) {\r\n  Sentry.captureException(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"../services/logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast(\"Au expected error occurred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\n// import { apiUrl } from \"../config/config.json\";\n// import logger from \"./logService\";\n// import { toast } from \"react-toastify\";\n\n// apiURrl has deleted\nconst apiEndpoint = \"/genres\";\n\nexport function getGenres() {\n  return http.get(apiEndpoint);\n}\n","import http from \"./httpService\";\n// import { apiUrl } from \"../config/config.json\";\n// import logger from \"./logService\";\n// import toast from \"react-toastify\";\n\n// End-Point > apiURrl has deleted\nconst apiEndpoint = \"/movies\";\n\n// URL for getting Single Movie with ID\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\n// Get Movies\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\n// Get Movie\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\n// Post or Put\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\n// Delete\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import React from \"react\";\r\n\r\nconst ListGroup = (props) => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    onItemSelect,\r\n    selectedItem,\r\n  } = props;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\n// Input    : liked > boolean\r\n// Output   : onClick event\r\nconst Like = (props) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\n// columns: array\r\n// sortColumn: object\r\n// onSotr: function\r\n\r\nclass TableHeader extends Component {\r\n  //rasing sort event\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  // return\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  // create td\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  // create key for 'td'\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import http from \"./httpService\";\r\n// import { apiUrl } from \"../config/config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n// apiURrl has deleted\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\n// token > http's header\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt); // devTool > Application > Local Storage\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt); // return object(user)\r\n    // console.log(user);\r\n  } catch (ex) {\r\n    console.log(\"No token exist in Application Local Storage\");\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  //render\r\n  render() {\r\n    const { movies, sortColumn, onSort } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Before implementing, you should think about the interfact of the component\r\n// What are the inputs the component is going to reveive?\r\n// What are the events it's going to raise?\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  //   const pagesCount =\r\n  //     itemsCount % pageSize === 0\r\n  //       ? itemsCount / pageSize\r\n  //       : itemsCount / pageSize + 1;\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <button\r\n              onClick={() => onPageChange(page)}\r\n              className=\"page-link\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\n// import logger from \"../services/logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\n\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n  };\r\n\r\n  // where you initalize properties or state objects\r\n  async componentDidMount() {\r\n    // _id: \"\" > map method's key\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies: movies, genres: genres });\r\n  }\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn: sortColumn });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id); // New array of movies\r\n    this.setState({ movies }); // this.setState({ movies: movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // logger.log(ex);\r\n        toast(\"This movie has already been deleted.\");\r\n      }\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedGenre,\r\n      sortColumn,\r\n      movies: allMovies,\r\n      searchQuery,\r\n    } = this.state;\r\n\r\n    // filtering(1-1)\r\n    // const filtered =\r\n    //   selectedGenre && selectedGenre._id\r\n    //     ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\r\n    //     : allMovies;\r\n\r\n    // modified filtering(1-2)\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    // sorting(2)\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    // paginating(3)\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    // return\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  // render\r\n  render() {\r\n    // const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    // no result deafult message (Not nececssary)\r\n    // if (count === 0) return <p>There're no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    // return\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            onItemSelect={this.handleGenreSelect}\r\n            selectedItem={this.state.selectedGenre}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\n// type, value, onChange > ...rest\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        // type={type}\r\n        // value={value}\r\n        // onChange={onChange}\r\n        {...rest}\r\n        id={name}\r\n        name={name}\r\n        className=\"form-control\"\r\n        // ref={this.username}\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react'\r\n\r\nconst Select = ( { name, label, options, error, ...rest}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"\" />\r\n                {options.map(option => (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\n\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  // validate\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options); // result > error\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message; // for of || map\r\n    return errors;\r\n  };\r\n\r\n  //validateProperty\r\n  validateProperty = ({ name, value }) => {\r\n    // input > name & value\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  //handleSubmit\r\n  handleSubmit = (e) => {\r\n    // const username = this.username.current.value;\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  // handleChange\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\n\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // logger.log(ex);\r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>MovieForm</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  // it's specific for Login\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  //   username = React.createRef();\r\n  //   componentDidMount() {\r\n  //     this.username.current.focus();\r\n  //   }\r\n\r\n  // errors.finde(e => e.name === 'username')\r\n  // errors ['username']\r\n\r\n  doSubmit = async () => {\r\n    //Call the server\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n      // this.props.history.push(\"/\");\r\n      const { state } = this.props.location;\r\n      // redirect uesrs depending on where users came from\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.invalidInfo = ex.response.data;\r\n        this.setState({ errors });\r\n        toast.error(`${this.state.errors.invalidInfo}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n// import { apiUrl } from \"../config/config.json\";\r\n\r\n// apiURrl has deleted\r\nconst apiEndPoint = \"/users\";\r\n\r\n// function userUrl(id) {\r\n//   return `${apiEndPoint}/${id}`;\r\n// }\r\n\r\n// export function getUser(userId) {\r\n//   return http.get(userUrl(userId));\r\n// }\r\n\r\nexport function register(user) {\r\n  //   const user = await getUser(user._id);\r\n  //   if (user) {\r\n  //     console.log(\"already\");\r\n  //   }\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\n\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\"; // this.props.history.push(\"/\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.invalidInfo = ex.response.data;\r\n        this.setState({ errors });\r\n        toast(`${this.state.errors.invalidInfo}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>NotFound</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      // path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","// 3rd party libraries\nimport React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\n// components\nimport NavBar from \"./components/navBar\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport RegisterForm from \"./components/registerForm\";\nimport NotFound from \"./components/notFound\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\n// module\nimport auth from \"./services/authService\";\n\n// css\nimport \"./App.js\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport logger from \"./services/logService\";\n\n// intializing logging service with Sentry\nlogger.init();\n\n// console.log(\"Testing\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}